import os, sys, subprocess, glob

Import('gDebug')

try:
    itubras = os.environ['ITUBRAS']
except:
    itubras = '../../'

includePath = ['include', 'src', 
'src/antlr', 
itubras + '/deps/irrlicht/include']

env = Environment(CPPPATH = includePath, MSVS_VERSION='8.0')

gPlatform = Environment()['PLATFORM']

print 'gDebug=', gDebug

libName = 'libs/libCISL'
LibPath = 'libs'
if gDebug:
    libName = 'libs/libCISL_d'
libCCFlags = ''
libLNFlags = ''
if gPlatform == 'win32':
    defines = ' /D "WIN32" /D "_LIB" /D "_UNICODE" /D "UNICODE"'
    #defines = ' /D "WIN32" /D "_LIB" /D "_UNICODE" /D "UNICODE"'
    if gDebug:
        libCCFlags = '/Od /Gm /EHsc /RTC1 /MTd /W3 /c /Wp64 /ZI /TC'
        defines = defines + ' /D "_DEBUG"'
    else:
        libCCFlags = '/O2 /GL /FD /EHsc /MT /W3 /c /Wp64 /Zi /TC'
        defines = defines + ' /D "NDEBUG"'
        libLNFlags = '/LTCG'

    libCCFlags += defines
        
elif gPlatform == 'posix':
    if gDebug:
        libCCFlags = '-g'

env.Append(CCFLAGS = libCCFlags)
env.Append(LINKFLAGS = libLNFlags)

cppFiles = glob.glob('src/*.cpp')
cppFiles += glob.glob('src/*.c')
cppFiles += glob.glob('src/antlr/*.c')

i = 0
for file in cppFiles:
    nfile = file.replace('src','objs')
    cppFiles[i] = nfile
    i += 1

env.Append(CISLSourceFiles = cppFiles)

env.BuildDir('objs', 'src', duplicate=0)

Export('env')

library = env.StaticLibrary(libName,cppFiles)
Default(library)


