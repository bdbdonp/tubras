#summary Irrlicht/Blender Exporter v0.1 (Official release will be v0.2)
#labels Featured

= Introduction =
[http://tubras.googlecode.com/svn/trunk/tools/irrb/irrbmodules/irrblend.png]
The Irrlicht/Blender Exporter exports Blender scene and static node data to the native Irrlicht scene (.irr) and mesh (.irrmesh) file formats.

*Features*
 * Blender Scene data is exported to Irrlicht native scene format (.irr).
 * Blender Mesh data is exported to the Irrlicht native mesh format (.irrmesh).
 * Export Blender Logic Properties as Irrlicht scene !UserData.
 * Export Lamp, Mesh, Camera, Sound, and Empty objects.
 * Export Game Engine Materials and corresponding UV data.
 * Export Blender Generated Lightmap/Baked Materials.
 * Export Object Parent/Child relationships and transforms.
 * Specify Textures as two-sided, transparent, and/or using lighting per face.
 * UV Images may optionally be copied to a user specified location and format.
 * Automatic translation between Blender and Irrlicht coordinate systems.
 * Optionally "walk test" your scene immediately after it is exported using Irrlicht.

= Installation =

The latest stable download of *irrb* is accessible from both the "Project" and "Downloads" tabs of this Google Code project. On the "Projects" tab, *irrb* is listed in the "Featured Downloads" section.

The current "*un-released*" version is 0.1 and may be downloaded from here:
   [http://tubras.googlecode.com/files/irrb-0.1.zip irrb-0.1.zip]

The contents of the zip package are:
{{{
 irrb.py
 irrbmodules/iExporter.py
 irrbmodules/iFilename.py
 irrbmodules/iGUI.py
 irrbmodules/iMaterials.py
 irrbmodules/iMesh.py
 irrbmodules/iMeshBuffer.py
 irrbmodules/irrblend.png
 irrbmodules/iScene.py
 irrbmodules/iUtils.py
 irrbmodules/__init__.py
}}}

Unzip the contents of the zip file into either the Blender scripts directory (".blender/scripts") or the user defined scripts directory.  It is important that the "irrbmodules" directory is created as a sub-directory underneath the Blender/User Defined ./scripts directory.

After *irrb* has been installed, either restart Blender or refresh the Scripts menu by selecting "Update Menus" within the Blender scripts menu.

*irrb* should then appear as an option under the Blender Scripts|Export menu:

[http://tubras.googlecode.com/svn/wiki/images/irrbss1.png]

Documentation on installing and configuring "iwalktest" for both Windows and Linux may be found here: *undefined wiki page*


= Before you get started = 

Before you start using the *irrb* you should at the very least have a fundamental understanding of how to use Blender.  

In order to better understand how *irrb* works with Blender, it will help you to look at the relationship between Blenders "Objects" and "!DataBlocks".

You can find a technical explanation here: *[http://www.blender.org/development/architecture/ Blender Architecture]*

In simpler terms, Blender "Objects" (sometimes referred to as Nodes) specify the Position, Orientation, and sometimes Scale of the "!DataBlock" the "Object" links to.  You may also have multiple "Objects" link to the same "!DataBlock".  Let's have a closer look.

[http://tubras.googlecode.com/svn/wiki/images/irrbss2.png]

If the entire scene pictured above were to be exported, how many mesh files would be created and how many Irrlicht "nodes" would written to the "Scene.irr" file?


 # If you answered - 3 mesh files and 3 nodes.  Keep reading.
 # If you answered - 2 mesh files and 3 nodes.  Keep reading.
 # If you answered - it's not possible to tell from the image.  You may skip to the next section.





A partial view of the Scene.irr file contents (lamp and camera nodes excluded):

{{{
<irr_scene>
   <attributes>
      <string name="Name" value="root" />
      <int name="Id" value="-1" />
      <vector3d name="Position" value="0.000000, 0.000000, 0.000000" />
      <vector3d name="Rotation" value="0.000000, 0.000000, 0.000000" />
      <vector3d name="Scale" value="1.000000, 1.000000, 1.000000" />
      <bool name="Visible" value="true" />
      <bool name="AutomaticCulling" value="true" />
      <bool name="DebugDataVisible" value="false" />
      <bool name="IsDebugObject" value="false" />
   </attributes>
   <userData>
      <attributes>
         <bool name="OccludesLight" value="false" />
      </attributes>
   </userData>
   <node type="mesh">
      <attributes>
         <string name="Name" value="Floor" />
         <int name="Id" value="-1" />
         <vector3d name="Position" value="0.000000, 0.000000, 0.000000" />
         <vector3d name="Rotation" value="0.000000, 0.000000, 0.000000" />
         <vector3d name="Scale" value="1.000000, 1.000000, 1.000000" />
         <bool name="Visible" value="true" />
         <bool name="AutomaticCulling" value="true" />
         <bool name="DebugDataVisible" value="false" />
         <bool name="IsDebugObject" value="false" />
         <string name="Mesh" value="FloorMesh.irrmesh" />
         <bool name="ReadOnlyMaterials" value="false" />
      </attributes>
   </node>
   <node type="mesh">
      <attributes>
         <string name="Name" value="ParkingLot" />
         <int name="Id" value="-1" />
         <vector3d name="Position" value="4.596000, 0.000000, -6.814000" />
         <vector3d name="Rotation" value="0.000000, 37.540000, 0.000000" />
         <vector3d name="Scale" value="2.021000, 2.021000, 2.021000" />
         <bool name="Visible" value="true" />
         <bool name="AutomaticCulling" value="true" />
         <bool name="DebugDataVisible" value="false" />
         <bool name="IsDebugObject" value="false" />
         <string name="Mesh" value="PlaneMesh.irrmesh" />
         <bool name="ReadOnlyMaterials" value="false" />
      </attributes>
   </node>
</irr_scene>
}}}

Here's the part that is likely to trip up new users: *Blender allows multiple Objects to link to the same !DataBlock.*

Again, using the example scene from above, we could link the "!FloorMesh" !DataBlock to the "!ParkingLot" Object.  In this case, *irrb* would create a single mesh file: "Floor.irrmesh" and it will still create two mesh node entries in the "Scene.irr" file.  However, the "!ParkingLot" node will now reference the "!FloorMesh.irrmesh" file via:
{{{
         <string name="Mesh" value="FloorMesh.irrmesh" />
}}}
*irrb* honors Blender's Object <-> !DataBlock relationships. This may cause unexpected results especially when exporting Meshes only.  More on this later.


= irrb Usage =

todo: document using the irrb...

[http://tubras.googlecode.com/svn/wiki/images/irrbss3.png]
[http://tubras.googlecode.com/svn/wiki/images/irrbss4.png]

(starting the exporter)

(setting up output locations)

(texture copying)

(texture options & Irrlicht materials)

(object/data block naming linux/windows)

(irrb status display)

(iwalktest integration and usage)

(lightmap & texture baking)

(texture tiling)

(cameras & lights)

(sounds)

(setting up UserData properties)

(tubras specific options)

(demo video)

(exporter options reference)

= tips, tricks, and samples = 

= FAQ =

todo: irrb faq

*Q*: Who are you?, Why are you here?

*A*: 
----
*Q*: Can I export animated meshes?

*A*: 
----
*Q*: I have a question, where do I go?

*A*:
----
*Q*: Where can I report bugs?

*A*:
----
*Q*: Where can I submit a patch?

*A*: 