#summary Irrlicht/Blender Exporter v0.1
#labels Featured

= Introduction =
[http://tubras.googlecode.com/svn/trunk/tools/irrb/irrbmodules/irrblend.png]
The Irrlicht/Blender Exporter exports Blender scene and static node data to the native Irrlicht scene (.irr) and mesh (.irrmesh) file formats.


= Installation =

The latest stable download of irrb is accessible from both the "Project" and "Downloads" tabs of this project. On the "Projects" tab, irrb is listed in the "Featured Downloads" section.

The current version is 0.1 and may be downloaded from here:
   [http://tubras.googlecode.com/files/irrb-0.1.zip irrb-0.1.zip]

The contents of the zip package are:
{{{
 irrb.py
 irrbmodules/iExporter.py
 irrbmodules/iFilename.py
 irrbmodules/iGUI.py
 irrbmodules/iMaterials.py
 irrbmodules/iMesh.py
 irrbmodules/iMeshBuffer.py
 irrbmodules/irrblend.png
 irrbmodules/iScene.py
 irrbmodules/iUtils.py
 irrbmodules/__init__.py
}}}

Unzip the contents of the zip file into either the Blender scripts directory (".blender/scripts") or the user defined scripts directory.  It is important that the "irrbmodules" directory is created as a sub-directory underneath the Blender/User Defined ./scripts directory.

After irrb has been installed, either restart Blender or refresh the Scripts menu by selecting "Update Menus" within the Blender scripts menu.

irrb should then appear as an option under the Blender Scripts|Export menu:

[http://tubras.googlecode.com/svn/wiki/images/irrbss1.png]


= Prerequisite Understanding = 

In order to better understand how the irrb exporter works in conjunction with Blender, you the user should possess a fundamental understanding of the relationship between Blender "Objects" and "Data Blocks".

From the *[http://www.blender.org/development/architecture/ Blender Architecture]* page:

 * In Blender the data blocks are the user's building blocks: they can be copied, modified, and linked to one another as desired.

 * Creating a link is actually the same as indicating a relationship; this causes a block to be 'used'. This can produce an instance of a block, or to get a particular characteristic.

 * For example, the block type 'Object' makes a 'Mesh' block appear in the 3d scene. The Object here determines the exact location, rotation and size of the Mesh. The Mesh then only stores information on vertex locations and faces. Also, more than one Object can have a link to the same Mesh (use, create an instance). Other block types, e.g. Materials, can be linked to Meshes to obtain the block type's features. 

Let's have a closer look at the third paragraph and how it affects the operation of irrb.

[http://tubras.googlecode.com/svn/wiki/images/irrbss2.png]

The above example Blender scene contains 5 *Objects*: 1-Render Object, 1-Camera Object, 1-Lamp Object, and 2-Mesh Objects.

The two mesh objects, named "Floor" (Red) and "ParkingLot" (Yellow) are linked to two independent *Mesh DataBlocks* named "FloorMesh" (Blue) and "PlaneMesh" (Green) respectively.
