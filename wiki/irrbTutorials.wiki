#summary irrb Tutorials (wip)
#labels Featured

== Introduction ==

Here you will find several tutorials on how to use *irrb* 0.3 in Blender (version 2.48a).  

The tutorials on this wiki are *NOT* intended to teach you how to use Blender. Even though the tutorials may mention Blender key combinations and mouse buttons for certain functionality, you will be doing yourself a big favor by spending a little time learning the *[http://www.blender.org/education-help/quickstart/ basics of Blender]*.

Before proceeding with a particular tutorial, please review the [irrbTutorials#Tutorial_Setup Tutorial Setup] located in the next section.

== List of Tutorials ==
|| *Tutorial* || *Description* ||
|| [http://code.google.com/p/tubras/wiki/irrbTutorialSolid Solid Material] || This basic tutorial will walk you through mapping a single UV texture. ||

== Contents ==

 * [irrbTutorials#Tutorial_Setup Tutorial Setup]
 * [irrbTutorials#A_Solid_Material A Solid Material]
 * [irrbTutorials#Single_Mesh_Multiple_Solids Single Mesh Multiple Solids]
 * [irrbTutorials#Transparent_Material Transparent Material]
 * [irrbTutorials#Light_Mapping Light Mapping]
 * [irrbTutorials#Normal_Mapping Normal Mapping]

----
=== Tutorial Setup ===

The tutorials will use the *irrb Utilities* for viewing the exporter results as well as creating binary meshes (.irrbmesh).  Installation instructions are here:

[http://code.google.com/p/tubras/wiki/irrbUtilities]

Each of these tutorials assumes the following directory structure for exported content:

{{{
c:\irrbScenes
   |
   | --- irrbTut1
   | ------ meshes
   | ------ images
   |
   | --- irrbTut2
   | ------ meshes
   | ------ images
}}}

The scene file (Scene.irr) will be created inside of the specific tutorial subdirectory.  For *irrbTut1*, this will be "c:\irrbScenes\irrbTut1\Scene.irr".  Each scenes mesh data will be saved inside of the "meshes" sub-directory underneath the appropriate tutorial.  The same holds true for related images.

Each tutorial will use the "full path" method of accessing mesh and image data.  If a tutorial uses an image created within Blender, we will manually save the image to the appropriate directory (instead of having *irrb* copy the textures).  For *irrbTut1*, the output locations would be setup as follows:

[http://tubras.googlecode.com/svn/wiki/images/irrbss17.png]

----

=== Single Mesh Multiple Solids ===

This tutorial demonstrates using three materials on a single mesh.  Note that you aren't limited to three materials per mesh, the fact is that it is possible to assign a different material to each *face* of a mesh.

Our intended goal is to produce the following scene:

[http://tubras.googlecode.com/svn/wiki/images/irrbss36.jpg]

This tutorial will use the following three images downloaded from [http://www.cgtextures.com/ cgtextures.com]. Save them to the c:\irrbScenes\irrbTut2\images directory:

[http://tubras.googlecode.com/svn/wiki/images/brick1.png]
[http://tubras.googlecode.com/svn/wiki/images/dirt1.png]
[http://tubras.googlecode.com/svn/wiki/images/concrete1.png]

Start with a new scene in Blender and resize the cube mesh to approximately 6x6 units.  From the Front View (*NUM1*), grab (*GKEY, ZKEY*) and move the cube up to align its bottom  to the red line.

Switch to edit mode and de-select the vertices (*AKEY*).  Box select the top vertices and move them down so the cube is approximately 4 units high.

Next we're going to do a Horizontal Loop Cut through the cube:

 * Select all of the vertices with the *AKEY*. All vertices will turn yellow when selected.
 * CTRL-RKEY to initiate the loop cut.
 * Move the mouse around the mesh until a horizontal, pink line appears
 * LMB and then slide the cut to just below the middle and then LMB to anchor the cut.

Here's what we should have so far:

[http://tubras.googlecode.com/svn/wiki/images/irrbss37.jpg]

Now we'll remove the top and front two faces:

 * Switch to Face Select Mode - *CTRL-TAB* and then select the "Faces" menu item.
 * *SHIFT-RMB* the top and front two faces.
 * *XKEY* and then select the "Faces" menu item to erase/delete the selected faces.

[http://tubras.googlecode.com/svn/wiki/images/irrbss38.jpg]

We can see from the above image that the face normals are facing out so we'll need to flip them:

 * *AKEY* to select all of the faces.
 * *WKEY* and then select the "Flip Normals" menu item.

[http://tubras.googlecode.com/svn/wiki/images/irrbss39.jpg]

Now we're ready to set up the materials.  We'll start with the ground plane and work our way up.

 * Enter UV Face Select Mode - *FKEY* when in Object Select Mode.
 * Select the ground plane - *RMB*.
 * Unwrap - UKEY.
 * Load the image "c:\irrbScenes\irrbTut2\images\dirt1.png" into the UV/Image Editor.
 * Select (*AKEY*) all of the UV coordinates in the UV/Image Editor.
 * Size (*SKEY*) the UV coordinates to approximate two and times the original:

[http://tubras.googlecode.com/svn/wiki/images/irrbss40.jpg]

Next, while in Face Select Mode, select the three lower panels of the walls and unwrap (*UKEY*):

[http://tubras.googlecode.com/svn/wiki/images/irrbss41.jpg]

You'll notice the quads are unwrapped sideways so we'll have to rotate them in order for the brick texture to appear correctly:

 * In the UV/Image Editor select all of the UV coordinates - *AKEY*.
 * Rotate (*RKEY*) the coordinates.  If you hold *CTRL* while rotating, the rotation will occur in steps of 5 degrees.

[http://tubras.googlecode.com/svn/wiki/images/irrbss42.jpg]

After the rotate, move (*GKEY*) the coordinates down to the bottom of the work area and then load the image "c:\irrbScenes\irrbTut2\images\brick1.png":

[http://tubras.googlecode.com/svn/wiki/images/irrbss43.jpg]

We'll need to fix the "stretched" look by adjusting the UV coordinates:

 * De-select the UV coordinates - *AKEY*
 * Box select the top UV coordinates - *BKEY*, *LMB*, drag.
 * Move the top coordinates to the top of the image - *GKEY*, *YKEY*, drag, *LMB* to anchor.

[http://tubras.googlecode.com/svn/wiki/images/irrbss44.jpg]

To finish, we'll adjust the UV coordinates in the X direction:

 * Select all of the UV coordinates - *AKEY*, *AKEY*
 * Size the coordinates - *SKEY*, *XKEY*, drag, *LMB*.

[http://tubras.googlecode.com/svn/wiki/images/irrbss45.jpg]

Note that you may zoom in/out of the UV/Image Editor View by scrolling the mouse wheel.

To map the top half of the walls, repeat the steps that were used for mapping the brick.  The only difference is that you need to use the image "c:\irrbScenes\irrbTut2\images\cement1.png" in place of the "brick1.png" image.

[http://tubras.googlecode.com/svn/wiki/images/irrbss46.jpg]

And finally our exported results:

[http://tubras.googlecode.com/svn/wiki/images/irrbss36.jpg]

----

=== Transparent Material ===

To illustrate transparent materials, we'll use our work from the second Tutorial and add a transparent fence to the front of the scene:

[http://tubras.googlecode.com/svn/wiki/images/irrbss47.jpg]

Before you start, save this image to the "c:\irrbScenes\irrbTut2\images" directory as "chainlink.png".  This image was originally downloaded from [http://www.filterforge.com/filters/871.html filterforge.com]

[http://tubras.googlecode.com/svn/wiki/images/chainlink.png]

First we'll create and position the plane that the chain link texture will be mapped to:

 * In Object Mode, de-select everything - *AKEY*
 * Switch to Front View - *NUM1*.
 * Add a plane - *SPACE*, Add, Mesh, Plane.
 * Size the plane to the width of the current scene.  Adjust its height to approximately half of the current scene.
 * Position the plane to the front of the scene.

[http://tubras.googlecode.com/svn/wiki/images/irrbss48.jpg]

Next, we'll assign the image to the plane face:

 * Switch to Front View - *NUM1*.
 * Switch to UV Select Mode - *FKEY* when in Object Mode.
 * Unwrap - *UKEY*, Project from View (Bounds).
 * Load the c:\irrbScenes\irrbTut2\images\chainlin.png" image. Make certain the "Relative Paths" button is *NOT* checked when loading the image.
 * Adjust the size of the UV coordinates to obtain the appropriate tiling. 

[http://tubras.googlecode.com/svn/wiki/images/irrbss49.jpg]

In order for *irrb* to export this material as a transparent material, we need to assign the UV Layer Name a name that corresponds to an Irrlicht transparent material name.  We can use either "trans_alphach" (better quality) or "trans_alphach_ref" (more efficient).  For our example, we'll use "trans_alphach".

That's it.  Now you're ready to export and view in *iwalktest*:

[http://tubras.googlecode.com/svn/wiki/images/irrbss50.jpg]

----

=== Light Mapping ===

The balk was largely due to Niko's *[http://www.ambiera.com/irredit/ irrEdit]*.  As you will soon see, proper light mapping in Blender is more difficult than doing so in *irrEdit*.  I suspect once Niko has finished fixing irrEdit 1.4 alpha bugs and adding missing features (packing/optimization), this section will likely become irrelevent.

Until then, here are some preliminary caveats and notes:

 * Light mapping should be the last step performed before exporting a scene. Modifying geometry after light mapping a scene is going to give you a headache.
 * Light mapping should only be performed on static geometry.  Movable objects should be set to *NOT* cast shadows.
 * If possible, create a single light map for your entire scene for reasons of efficiency.
 * Texture first, light map second.
 * The technique we'll use for light mapping involves render baking onto a second UV  "light map" layer.

This tutorial will light map a simple scene consisting of a plane and a couple of cubes:

[http://tubras.googlecode.com/svn/wiki/images/irrbss51.jpg]

We will use the following two images downloaded from [http://www.cgtextures.com cgtextures.com]. Save them to the c:\irrbScenes\irrbTut3\images directory:

[http://tubras.googlecode.com/svn/wiki/images/tile.png]
[http://tubras.googlecode.com/svn/wiki/images/wood.png]

Start with a new scene (cube already exists) and add a plane mesh approximately 12x12 units in size.  

Before we create the light map, we'll UV map the base/diffuse textures.  First the plane:

 * In Object Mode, *FKEY* to create the first UV layer.
 * In the UV/Image Editor, open and assign the previously saved tile.png image (c:\irrbScenes\irrbTut3\images\tile.png).  Resize the UV coordinates to approximately 2X the original size.

[http://tubras.googlecode.com/svn/wiki/images/irrbss52.jpg]

Next we'll create the base/diffuse texture for the cube:

 * Select the cube in Object Mode.
 * *FKEY* to create the first UV layer.
 * *UKEY* to call up the UV Calculation Menu and then select "Cube Projection".
 * In the UV/Image Editor, open and assign the previously saved wood.png image (c:\irrbScenes\irrbTut3\images\wood.png).

[http://tubras.googlecode.com/svn/wiki/images/irrbss53.jpg]

Now we'll add a second cube by duplicating the first cube (including the UV mapped texture):

 * Select the original cube in Object Mode.
 * *SHIFT-DKEY* to duplicate.  Move the cube and *LMB* to anchor it.
 * Switch to Front View - *NUM1*.
 * Select both cubes - *SHIFT-RMB*.
 * Move them up so the bottoms are barely touching the floor - *GKEY*, *ZKEY*, move the mouse and *LMB* to anchor.

If exported, the scene should appear as follows:

[http://tubras.googlecode.com/svn/wiki/images/irrbss54.jpg]

Because we want to use a single light map image for the entire scene, we need to join all of the meshes into one single mesh:

 * In Object Mode select all of the meshes - *SHIFT-RMB*
 * Join the meshes together - *JKEY*.

Note that even though the meshes are now joined into a single mesh, the individual faces retain the original UV/Image mapping.

Now we are ready to create and map the light map UV layer:

 * In Object Mode select the mesh - *RMB*.
 * Switch to UV Face Select Mode - *FKEY*.
 * Add a *new* UV Layer:

[http://tubras.googlecode.com/svn/wiki/images/irrbss55.jpg]

Then set it as the "rendering texture/target":

[http://tubras.googlecode.com/svn/wiki/images/irrbss56.jpg]

Now we're ready to create the light map image, bake, and finally save it.

 * In the UV/Image Editor, create a new image 256x256.
 * In the 3D Window, create the light map UV coordinates for the second UV layer - *UKEY* and then select the "*Lightmap UVPack*" menu item. Set the "margin" to 0.2 and click OK.
 * Bake the light map into the second UV layer - *CTRL-ALT-BKEY* and then select the "Full Render" menu item

The light map layer should look similar to this:

[http://tubras.googlecode.com/svn/wiki/images/irrbss57.jpg]

In the UV/Image Editor save the newly baked light map image to c:\irrbScenes\irrbTut3\images\lightmap.tga.

Finally, we need to _tell_ *irrb* to export this material as a light map material. To do this, we need to assign the UV Layer Name a name that corresponds to an Irrlicht light map material name: *lightmap*, *lightmap_m2*, *lightmap_m4*, *lightmap_light* etc.  See the section on [http://code.google.com/p/tubras/wiki/irrb#Irrlicht_Material_Generation Irrlicht Material Information] for more info.

We'll use "lightmap" for our example:

[http://tubras.googlecode.com/svn/wiki/images/irrbss58.jpg]

Now we're ready to export and view in *iwalktest*:

[http://tubras.googlecode.com/svn/wiki/images/irrbss59.jpg]

Hmmm, you may have noticed the shadows from the cubes are completely black.  This is because we didn't set up any ambient light/occlusion.  Let's do that now.

Call up the Materials Window - *F5KEY*, and select the "World" buttons.  Then set the Ambient RGB values to 0.2:

[http://tubras.googlecode.com/svn/wiki/images/irrbss60.jpg]

Now we'll need to re-bake the light map and re-save it:

 * Re-bake the light map image - *CTRL-ALT-BKEY*, and then select the "Full Render" menu item.
 * Save the newly baked light map image over the top of the existing lightmap.tga. In the UV/Image Editor window - *ALT-SKEY*.

Re-export and view your results:

[http://tubras.googlecode.com/svn/wiki/images/irrbss61.jpg]

Are we done? Not really.  There are still a couple of problems.

*Jagged Shadow Edges*.  You can improve the edges by creating the light map image at a higher resolution (512x512, 1024x1024, etc.).  But that will only _improve_ the edges a little bit.  Another solution is to open the saved light map image in *[http://www.gimp.org GIMP]* and apply a Gaussian Blur.

*Single Static Mesh*.  Our scene is now a single static mesh which isn't very efficient for culling.  In order to increase the culling efficiency, we need to separate the mesh out into individual meshes.  Fortunately, Blender retains the UV coordinate/image info even after separating out individual meshes.  To separate:

 * In Edit Mode (Faces) select the faces you want to extract out into a separate mesh, *PKEY*, and then choose the "Selected" menu item.





 

----

=== Normal Mapping ===

todo

----