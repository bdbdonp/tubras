=====================
Collision and Physics
=====================

.. toctree::
   :maxdepth: 2

.. container:: irrb-right

	.. image:: _static/img024.png

**irrB** allows exporting Blender's collision and physics data to an Irrlicht scene 
file (.irr). Collision and Physics data are written to the Scene file (.irr) and 
saved to each object/nodes **userData** section. For example::

	<node type="mesh">
	   <attributes>
	      <string name="Name" value="Cube"/>
	      <int name="Id" value="-1"/>
	      <vector3d name="Position" value="0.000000, 0.000000, 0.000000"/>
	      <vector3d name="Rotation" value="0.000000, -0.000000, 0.000000"/>
	      <vector3d name="Scale" value="1.000000, 1.000000, 1.000000"/>
	      <bool name="Visible" value="true"/>
	      <enum name="AutomaticCulling" value="frustum_box"/>
	      <bool name="DebugDataVisible" value="false"/>
	      <bool name="IsDebugObject" value="false"/>
	      <bool name="ReadOnlyMaterials" value="false"/>
	      <string name="Mesh" value="mdl/Cube.irrbmesh"/>
	   </attributes>
	   <userData>
	      <attributes>
	         <string name="Physics.BodyType" value="static"/>
	         <string name="Physics.BodyShape" value="box"/>
	         <bool name="Physics.Visible" value="true"/>
	         <float name="Physics.Friction" value="0.50"/>
	         <float name="Physics.Restitution" value="0.00"/>
	      </attributes>
	   </userData>
	</node>

Collision and Physics data are only written to the exported scene file when the 
"Physics" option is enabled in the **irrB** export sub-panel.

It's important to note that in order to take advantage of the exported Collision/Physics
data, your application will require code to extract, initialize, and process the
data in order for it to be meaningful.  In other words, your application will need
to integrate an existing 3rd party Collision/Physics libraray such as:

	* Bullet - http://bulletphysics.org
	* Havok - http://havok.com
	* Physx - http://www.nvidia.com/object/physx_new.html
	* Open Dynamics Engine (ODE) - http://www.ode.org
	* Newton - http://newtondynamics.com
	
You may also choose to use Irrlicht's own built-in collision system which is 
capable of collision detection/response only (no dynamics simulation).

----

Physics Property Mapping
========================

As previously mentioned, **irrB** writes Collision/Physics data to an exported 
object's  scene node as **userData**. The following tags may be generated by **irrB**:

+------------------------------+------------------------------------------+   
| irrB UserData Tag            | Description                              |
+==============================+==========================================+
| Physics.BodyType             | Object body type - static, none, sensor, | 
|                              | soft, dynamic, rigid, or occluder        |
+------------------------------+------------------------------------------+
| Physics.BodyShape            | Object body shape - box, sphere, cone,   | 
|                              | cylinder, concavemesh, or convexmesh     |
+------------------------------+------------------------------------------+
| Physics.Visible              | Whether or not the geometry is visible.  | 
+------------------------------+------------------------------------------+   
| Physics.Mass                 | The object mass.                         | 
+------------------------------+------------------------------------------+
| Physics.Friction             |                                          | 
+------------------------------+------------------------------------------+
| Physics.Restitution          |                                          | 
+------------------------------+------------------------------------------+
| Physics.Ghost                |                                          | 
+------------------------------+------------------------------------------+
| Physics.Actor                |                                          | 
+------------------------------+------------------------------------------+
| Physics.CollisionResponse    |                                          | 
+------------------------------+------------------------------------------+

The following table is a map of Blender's **Physics Type**  to **irrB**'s 
Physics.BodyType:

+------------------------------+------------------------------------------+   
| Blender Physics Type         | irrB "Physics.BodyType" value            |
+==============================+==========================================+
| Static                       | "static"                                 | 
+------------------------------+------------------------------------------+
| No Collision                 | "none"                                   | 
+------------------------------+------------------------------------------+
| Sensor                       | "sensor"                                 | 
+------------------------------+------------------------------------------+   
| Dynamic                      | "dynamic"                                | 
+------------------------------+------------------------------------------+
| Rigid body                   | "rigid"                                  | 
+------------------------------+------------------------------------------+
| Soft body                    | "soft"                                   | 
+------------------------------+------------------------------------------+
| Occlude                      | "occulder"                               | 
+------------------------------+------------------------------------------+
| Navigation Mesh              | "none"                                   | 
+------------------------------+------------------------------------------+
 
**irrB** generates the Physics.BodyShape value based on Blender's "Bounds" 
parameter setting.  The following table is a map of Blender's Bounds types to
what what is exported by **irrB**:

+------------------------------+------------------------------------------+   
| Blender Bounds Type          | irrB "Physics.BodyShape" value           |
+==============================+==========================================+
| Triangle Mesh                | "TRIANGLE_MESH"                          | 
+------------------------------+------------------------------------------+
| Convex Hull                  | "CONVEX_HULL"                            | 
+------------------------------+------------------------------------------+
| Cone                         | "CONE"                                   | 
+------------------------------+------------------------------------------+   
| Cylinder                     | "CYLINDER"                               | 
+------------------------------+------------------------------------------+
| Sphere                       | "SPHERE"                                 | 
+------------------------------+------------------------------------------+
| Box                          | "BOX"                                    | 
+------------------------------+------------------------------------------+
| Capsule                      | "CAPSULE"                                | 
+------------------------------+------------------------------------------+
 

