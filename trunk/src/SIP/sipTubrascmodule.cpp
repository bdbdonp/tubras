/*
 * Module code.
 *
 * Generated by SIP 4.6 (4.6) on Sat Apr 14 16:53:41 2007
 */

#include "sipAPITubras.h"

#include "sipTubrasTApplication.h"
#include "sipTubrasTVector3.h"


/* Define the strings used by this module. */
char sipNm_Tubras_setGUICursorVisible[] = "setGUICursorVisible";
char sipNm_Tubras_run[] = "run";
char sipNm_Tubras_initialize[] = "initialize";
char sipNm_Tubras_TApplication[] = "TApplication";
char sipNm_Tubras_TVector3[] = "TVector3";


/*
 * This defines each class in this module.  The values are replaced by the
 * proper Python types during the export process.
 */
static sipWrapperType *typesTable[] = {
    (sipWrapperType *)(void *)&sipType_Tubras_TApplication,
    (sipWrapperType *)(void *)&sipType_Tubras_TVector3,
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_Tubras = {
    NULL,
    SIP_API_MINOR_NR,
    "Tubras",
    NULL,
    0,
    NULL,
    NULL,
    2,
    typesTable,
    NULL,
    NULL,
    0,
    NULL,
    NULL,
    0,
    NULL,
    NULL,
    NULL,
    NULL,
    {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_Tubras;


/* The Python module initialisation function. */
#if defined(SIP_STATIC_MODULE)
extern "C" void initTubras()
#else
PyMODINIT_FUNC initTubras()
#endif
{
   static PyMethodDef sip_methods[] = {
        {0, 0, 0, 0}
    };

   PyObject *sipModule, *sipModuleDict, *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
    sipModule = Py_InitModule((char *)sipModuleAPI_Tubras.em_name,sip_methods);
    sipModuleDict = PyModule_GetDict(sipModule);

    /* Import the SIP module and get it's API. */
    sip_sipmod = PyImport_ImportModule((char *)"sip");

    if (sip_sipmod == NULL)
        return;

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod),"_C_API");

    if (sip_capiobj == NULL || !PyCObject_Check(sip_capiobj))
        return;

    sipAPI_Tubras = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));

    /* Export the module and publish it's API. */
    if (sipAPI_Tubras->api_export_module(&sipModuleAPI_Tubras,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,sipModuleDict) < 0)
       return;
}
